CREATE DATABASE ORG;
SHOW DATABASES;
USE ORG;

CREATE TABLE Worker (
	WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	FIRST_NAME CHAR(25),
	LAST_NAME CHAR(25),
	SALARY INT(15),
	JOINING_DATE DATETIME,
	DEPARTMENT CHAR(25)
);

INSERT INTO Worker 
	(WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
		(001, 'Monika', 'Arora', 100000, '21-02-20 09.00.00', 'HR'),
		(002, 'Niharika', 'Verma', 80000, '21-06-11 09.00.00', 'Admin'),
		(003, 'Vishal', 'Singhal', 300000, '21-02-20 09.00.00', 'HR'),
		(004, 'Amitabh', 'Singh', 500000, '21-02-20 09.00.00', 'Admin'),
		(005, 'Vivek', 'Bhati', 500000, '21-06-11 09.00.00', 'Admin'),
		(006, 'Vipul', 'Diwan', 200000, '21-06-11 09.00.00', 'Account'),
		(007, 'Satish', 'Kumar', 75000, '21-01-20 09.00.00', 'Account'),
		(008, 'Geetika', 'Chauhan', 90000, '21-04-11 09.00.00', 'Admin');

CREATE TABLE Bonus (
	WORKER_REF_ID INT,
	BONUS_AMOUNT INT(10),
	BONUS_DATE DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);

INSERT INTO Bonus 
	(WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) VALUES
		(001, 5000, '23-02-20'),
		(002, 3000, '23-06-11'),
		(003, 4000, '23-02-20'),
		(001, 4500, '23-02-20'),
		(002, 3500, '23-06-11');
CREATE TABLE Title (
	WORKER_REF_ID INT,
	WORKER_TITLE CHAR(25),
	AFFECTED_FROM DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);

INSERT INTO Title 
	(WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM) VALUES
 (001, 'Manager', '2023-02-20 00:00:00'),
 (002, 'Executive', '2023-06-11 00:00:00'),
 (008, 'Executive', '2023-06-11 00:00:00'),
 (005, 'Manager', '2023-06-11 00:00:00'),
 (004, 'Asst. Manager', '2023-06-11 00:00:00'),
 (007, 'Executive', '2023-06-11 00:00:00'),
 (006, 'Lead', '2023-06-11 00:00:00'),
 (003, 'Lead', '2023-06-11 00:00:00');



Q-1. Write an SQL query to fetch “FIRST_NAME” from the Worker table using the alias name <WORKER_NAME>.
code:
select first_name from worker;

Q-2. Write an SQL query to fetch “FIRST_NAME” from the Worker table in upper case.
code:
select upper(first_name) from worker;

Q-3. Write an SQL query to fetch unique values of DEPARTMENT from the Worker table.
code:
select distinct department from worker;

Q-4. Write an SQL query to print the first three characters of  FIRST_NAME from the Worker table.
code:
select substring(first_name,1,3) from worker;

Q-5. Write an SQL query to find the position of the alphabet (‘a’) in the first name column ‘Amitabh’ from the Worker table.
code:
select instr(first_name,'a') as postion_of_a from worker where first_name = 'Amitabh';

select instr('amitabh','a') as postion_of_a;

Q-6. Write an SQL query to print the FIRST_NAME from the Worker table after removing white spaces from the right side.
code:
select RTRIM(first_name) from worker;

Q-7. Write an SQL query to print the DEPARTMENT from the Worker table after removing white spaces from the left side.
code:
SELECT LTRIM(DEPARTMENT) AS trimmed_department FROM Worker;
select ltrim(DEPARTMENT) from worker;

Q-8. Write an SQL query that fetches the unique values of DEPARTMENT from the Worker table and prints its length.
code:
select distinct(length(department)) from worker;
select DISTINCT(department),length(department) from worker;

Q-9. Write an SQL query to print the FIRST_NAME from the Worker table after replacing ‘a’ with ‘A’.
code:
SELECT REPLACE(FIRST_NAME,'a','A') FROM worker;

Q-10. Write an SQL query to print the FIRST_NAME and LAST_NAME from the Worker table into a single column COMPLETE_NAME. A space char should separate them.
code:
select concat(first_name,' ',last_name)as COMPLETE_NAME from worker;		

Q-11. Write an SQL query to print all Worker details from the Worker table order by FIRST_NAME Ascending.
code:
select * from worker order by first_name asc;

Q-12. Write an SQL query to print all Worker details from the Worker table order by FIRST_NAME Ascending and DEPARTMENT Descending.
code:
select * from  worker order by first_name asc,department desc;
select * from  worker w order by w.first_name asc,w.department desc;

Q-13. Write an SQL query to print details for Workers with the first names “Vipul” and “Satish” from the Worker table.
code:
select * from worker where first_name in('Vipul','Satish');

Q-14. Write an SQL query to print details of workers excluding first names, “Vipul” and “Satish” from the Worker table.
code:
select * from worker where first_name not in('Vipul','Satish');              # "excluding meaning" is two name not in table 

Q-15. Write an SQL query to print details of Workers with DEPARTMENT name as “Admin”.
code:
select * from worker where department like 'Admin%';

Q-16. Write an SQL query to print details of the Workers whose FIRST_NAME contains ‘a’.
code:
select * from worker where first_name like '%a%';

Q-17. Write an SQL query to print details of the Workers whose FIRST_NAME ends with ‘a’.
code:
select * from worker where first_name like '_____a';             #6lenght name 5 time '_'end a name is monika
select * from worker where first_name like '______a';            #7lenght name 6 time '_'end a name is Niharika
select * from worker where first_name like '_______a';           #8lenght name 7 time '_'end a name is geetika

Q-18. Write an SQL query to print details of the Workers whose FIRST_NAME ends with ‘h’ and contains six alphabets.
code:
select * from worker where first_name like '_____h';            # name lenght given 6 & name is satish

Q-19. Write an SQL query to print details of the Workers whose SALARY lies between 100000 and 500000.
code:
select * from worker where salary between 100000 and 500000;

Q-20. Write an SQL query to print details of the Workers who joined in Feb 2021.
code:
select * from worker where year(joining_date)= 2021 and month(joining_date)= 2;

Q-21. Write an SQL query to fetch the count of employees working in the department ‘Admin’.
code:
select count(worker_ID),department from worker where department='admin';

Q-22. Write an SQL query to fetch worker names with salaries >= 50000 and <= 100000.
code:
select concat(first_name,' ',last_name) as worker_name,salary from worker where salary between 50000 and 100000;

Q-23. Write an SQL query to fetch the number of workers for each department in descending order.
code:
SELECT DEPARTMENT, count(WORKER_ID) No_Of_Workers FROM worker GROUP BY DEPARTMENT ORDER BY No_Of_Workers DESC;
select department,count(worker_id) as no_workers from worker group by department order by no_workers desc;

Q-24. Write an SQL query to print details of the Workers who are also Managers.
code:
select worker_ref_id,affected_from,worker_title from title where worker_title='manager';

Q-25. Write an SQL query to fetch duplicate records having matching data in some fields of a table.
code:
select first_name,last_name,COUNT(*) from worker group by first_name,last_name having COUNT(*) > 1;

Q-26. Write an SQL query to show only odd rows from a table.
code:
select * from bouns where worker_ref_id % 2 <> 0;          # bouns table
SELECT * FROM bouns WHERE mod(worker_ref_id,2) <> 0; 

Q-27. Write an SQL query to show only even rows from a table.
code:
select * from worker where worker_id % 2 = 0;              # worker table
select * from worker where mod(worker_id,2) = 0;

Q-28. Write an SQL query to clone a new table from another table.
code:
create table workers select * from worker;
create table workers as select * from worker;
create table workers as select * from worker where 1 = 0;

DQ-29. Write an SQL query to fetch intersecting records of two tables.
code:


DQ-30. Write an SQL query to show records from one table that another table does not have.
code:
SELECT * FROM Title WHERE worker_title NOT IN (SELECT first_name FROM worker);



DQ-31. Write an SQL query to show the current date and time.
code:
select getdate();
select now();


Q-32. Write an SQL query to show the top n (say 10) records of a table.
code:
select worker_id,first_name from worker limit 10;

Q-33. Write an SQL query to determine the nth (say n=5) highest salary from a table.
code:
SELECT worker_id,salary FROM worker ORDER BY Salary DESC LIMIT 4,1;              #n-1,1 is 4th hight salary only 1 person 
SELECT worker_id,first_name,salary FROM worker ORDER BY Salary DESC LIMIT 4,1;

Q-34. Write an SQL query to determine the 5th highest salary without using the TOP or limit method.
code:
select first_name,salary from worker w where 4 = (select count(distinct salary) from worker w2 where w2.salary > w.salary);     # 4  is 5th hight salary 

Q-35. Write an SQL query to fetch the list of employees with the same salary.
code:
select * from worker where salary in (select salary from worker w where worker.worker_id <> w.worker_id);

Q-36. Write an SQL query to show the second-highest salary from a table.
code:
select * from worker order by salary desc limit 1;
select * from worker order by salary desc limit 1,1;

Q-37. Write an SQL query to show one row twice in the results from a table.
code:
select * from worker where worker_id = 1 union all select * from worker where worker_id = 1;

DQ-38. Write an SQL query to fetch intersecting records of two tables.
code:
select * from worker interset select * from worker;

DQ-39. Write an SQL query to fetch the first 50% of records from a table.
code:
select * worker order by first_name,last_name,salary limit (select ceil(count(*)/2) from worker) rows only;

Q-40. Write an SQL query to fetch the departments that have less than five people in them.
code:
select department ,count(worker_id) from worker group by department having count(worker_id) < 5;

Q-41. Write an SQL query to show all departments along with the number of people in there.
code:
select department ,count(*) from worker group by department;

Q-42. Write an SQL query to show the last record from a table.
code:
select * from worker order by worker_id desc limit 1;

Q-43. Write an SQL query to fetch the first row of a table.
code:
select * from worker order by worker_id asc limit 1;

Q-44. Write an SQL query to fetch the last five records from a table.
code:
select * from worker order by worker_id desc limit 5;

Q-45. Write an SQL query to print the names of employees having the highest salary in each department.
code:
select  department, max(salary) from worker group by department;

Q-46. Write an SQL query to fetch three max salaries from a table.
code:
select distinct salary as max_salaries from worker order by salary desc limit 3;
select distinct worker_id,salary from worker order by salary desc limit 3;

Q-47. Write an SQL query to fetch three min salaries from a table.
code:
select distinct salary as min_salaries from worker order by salary asc limit 3;

Q-48. Write an SQL query to fetch nth max salaries from a table.
code:
select distinct salary as max_salaries from worker order by salary desc limit n-1,1;

Q-49. Write an SQL query to fetch departments along with the total salaries paid for each of them.
code:
select department ,sum(salary) as total_salaries from worker group by department;

Q-50. Write an SQL query to fetch the names of workers who earn the highest salary.
code:
select concat(first_name,' ',last_name) as worker_name,salary as hightest_salary from worker where salary = ( select max(salary) from worker);
